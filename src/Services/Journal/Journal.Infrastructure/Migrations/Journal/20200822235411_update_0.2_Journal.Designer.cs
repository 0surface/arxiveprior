// <auto-generated />
using System;
using Journal.Infrastructure;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Journal.Infrastructure.Migrations.Journal
{
    [DbContext(typeof(JournalContext))]
    [Migration("20200822235411_update_0.2_Journal")]
    partial class update_02_Journal
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Journal.Domain.AggregatesModel.ArticleAggregate.Affiliation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Affiliation");
                });

            modelBuilder.Entity("Journal.Domain.AggregatesModel.ArticleAggregate.Article", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AcmCategory")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ArxivId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Comment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("Doi")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DoiLinks")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("HasProcessingError")
                        .HasColumnType("bit");

                    b.Property<bool>("IsLatestVersion")
                        .HasColumnType("bit");

                    b.Property<bool>("IsWithdrawn")
                        .HasColumnType("bit");

                    b.Property<int>("JournalProcessedId")
                        .HasColumnType("int");

                    b.Property<string>("JournalReference")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("MscCategory")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PdfLink")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PrimarySubjectCodeId")
                        .HasColumnType("int");

                    b.Property<int?>("PrimarySubjectGroupCodeId")
                        .HasColumnType("int");

                    b.Property<int?>("PrmiaryDisciplineId")
                        .HasColumnType("int");

                    b.Property<DateTime>("PublishedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Summary")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("UpdatedDay")
                        .HasColumnType("int");

                    b.Property<int>("UpdatedMonth")
                        .HasColumnType("int");

                    b.Property<int>("UpdatedYear")
                        .HasColumnType("int");

                    b.Property<int>("VersionNumber")
                        .HasColumnType("int");

                    b.Property<string>("VersionedArxivId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("PrimarySubjectCodeId");

                    b.HasIndex("PrimarySubjectGroupCodeId");

                    b.HasIndex("PrmiaryDisciplineId");

                    b.ToTable("Article");
                });

            modelBuilder.Entity("Journal.Domain.AggregatesModel.ArticleAggregate.Author", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OrcidId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OrcidLink")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Author");
                });

            modelBuilder.Entity("Journal.Domain.AggregatesModel.ArticleAggregate.AuthorAffiliation", b =>
                {
                    b.Property<int>("AuthorId")
                        .HasColumnType("int");

                    b.Property<int>("AffiliationId")
                        .HasColumnType("int");

                    b.HasKey("AuthorId", "AffiliationId");

                    b.HasIndex("AffiliationId");

                    b.ToTable("AuthorAffiliation");
                });

            modelBuilder.Entity("Journal.Domain.AggregatesModel.ArticleAggregate.AuthorArticle", b =>
                {
                    b.Property<int>("AuthorId")
                        .HasColumnType("int");

                    b.Property<int>("ArticleId")
                        .HasColumnType("int");

                    b.HasKey("AuthorId", "ArticleId");

                    b.HasIndex("ArticleId");

                    b.ToTable("AuthorArticle");
                });

            modelBuilder.Entity("Journal.Domain.AggregatesModel.ArticleAggregate.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("DisciplineId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("SubjectCodeId")
                        .HasColumnType("int");

                    b.Property<int?>("SubjectGroupId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("DisciplineId");

                    b.HasIndex("SubjectCodeId");

                    b.HasIndex("SubjectGroupId");

                    b.ToTable("Category");
                });

            modelBuilder.Entity("Journal.Domain.AggregatesModel.ArticleAggregate.CategoryArticle", b =>
                {
                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<int>("ArticleId")
                        .HasColumnType("int");

                    b.HasKey("CategoryId", "ArticleId");

                    b.HasIndex("ArticleId");

                    b.ToTable("CategoryArticle");
                });

            modelBuilder.Entity("Journal.Domain.AggregatesModel.ArticleAggregate.Discipline", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Discipline");
                });

            modelBuilder.Entity("Journal.Domain.AggregatesModel.ArticleAggregate.PaperVersion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("ArticleId")
                        .HasColumnType("int");

                    b.Property<string>("ArxivId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Number")
                        .HasColumnType("int");

                    b.Property<DateTime>("SubmissionDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ArticleId");

                    b.ToTable("Version");
                });

            modelBuilder.Entity("Journal.Domain.AggregatesModel.ArticleAggregate.SubjectCode", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SubjectGroupCode")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("SubjectCode");
                });

            modelBuilder.Entity("Journal.Domain.AggregatesModel.ArticleAggregate.SubjectGroup", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("DisciplineName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("SubjectGroup");
                });

            modelBuilder.Entity("Journal.Domain.AggregatesModel.JobAggregate.Fulfillment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ArticlesCount")
                        .HasColumnType("int");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("EventId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ExtractionFulfillmentId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("InsertedCount")
                        .HasColumnType("int");

                    b.Property<bool>("IsPending")
                        .HasColumnType("bit");

                    b.Property<bool>("IsProcessed")
                        .HasColumnType("bit");

                    b.Property<DateTime>("JobCompletedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("JobStartedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("JournalType")
                        .HasColumnType("int");

                    b.Property<double>("ProcessingTimeInMilliseconds")
                        .HasColumnType("float");

                    b.Property<DateTime>("QueryFromDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("QueryToDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("TotalProcessedCount")
                        .HasColumnType("int");

                    b.Property<int>("UpdatedCount")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Fulfillments");
                });

            modelBuilder.Entity("Journal.Domain.AggregatesModel.SubjectAggregate.Subject", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Discipline")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GroupCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GroupName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Subjects");
                });

            modelBuilder.Entity("Journal.Domain.AggregatesModel.ArticleAggregate.Article", b =>
                {
                    b.HasOne("Journal.Domain.AggregatesModel.ArticleAggregate.SubjectCode", "PrimarySubjectCode")
                        .WithMany()
                        .HasForeignKey("PrimarySubjectCodeId");

                    b.HasOne("Journal.Domain.AggregatesModel.ArticleAggregate.SubjectGroup", "PrimarySubjectGroupCode")
                        .WithMany()
                        .HasForeignKey("PrimarySubjectGroupCodeId");

                    b.HasOne("Journal.Domain.AggregatesModel.ArticleAggregate.Discipline", "PrmiaryDiscipline")
                        .WithMany()
                        .HasForeignKey("PrmiaryDisciplineId");
                });

            modelBuilder.Entity("Journal.Domain.AggregatesModel.ArticleAggregate.AuthorAffiliation", b =>
                {
                    b.HasOne("Journal.Domain.AggregatesModel.ArticleAggregate.Affiliation", "Affiliation")
                        .WithMany("AuthorAffiliations")
                        .HasForeignKey("AffiliationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Journal.Domain.AggregatesModel.ArticleAggregate.Author", "Author")
                        .WithMany("AuthorAffiliations")
                        .HasForeignKey("AuthorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Journal.Domain.AggregatesModel.ArticleAggregate.AuthorArticle", b =>
                {
                    b.HasOne("Journal.Domain.AggregatesModel.ArticleAggregate.Article", "Article")
                        .WithMany("AuthorArticles")
                        .HasForeignKey("ArticleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Journal.Domain.AggregatesModel.ArticleAggregate.Author", "Author")
                        .WithMany()
                        .HasForeignKey("AuthorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Journal.Domain.AggregatesModel.ArticleAggregate.Category", b =>
                {
                    b.HasOne("Journal.Domain.AggregatesModel.ArticleAggregate.Discipline", "Discipline")
                        .WithMany()
                        .HasForeignKey("DisciplineId");

                    b.HasOne("Journal.Domain.AggregatesModel.ArticleAggregate.SubjectCode", "SubjectCode")
                        .WithMany()
                        .HasForeignKey("SubjectCodeId");

                    b.HasOne("Journal.Domain.AggregatesModel.ArticleAggregate.SubjectGroup", "SubjectGroup")
                        .WithMany()
                        .HasForeignKey("SubjectGroupId");
                });

            modelBuilder.Entity("Journal.Domain.AggregatesModel.ArticleAggregate.CategoryArticle", b =>
                {
                    b.HasOne("Journal.Domain.AggregatesModel.ArticleAggregate.Article", "Article")
                        .WithMany("CategoryArticles")
                        .HasForeignKey("ArticleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Journal.Domain.AggregatesModel.ArticleAggregate.Category", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Journal.Domain.AggregatesModel.ArticleAggregate.PaperVersion", b =>
                {
                    b.HasOne("Journal.Domain.AggregatesModel.ArticleAggregate.Article", "Article")
                        .WithMany("PaperVersions")
                        .HasForeignKey("ArticleId");
                });
#pragma warning restore 612, 618
        }
    }
}
